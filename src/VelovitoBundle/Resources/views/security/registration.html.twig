{% extends "VelovitoBundle::layout_blank.html.twig" %}
{% import 'VelovitoBundle:templates:macroses.html.twig' as macroses %}

{% block body %}
    {% include 'VelovitoBundle:templates:alert.html.twig' %}

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" ng-app="myApp">
        <div class="modal-dialog" role="document" ng-controller="registerController">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                    </button>

                    <h4 class="modal-title">Регистрация</h4>
                </div>

                <div class="modal-body">
                    <div class="row">
                        <div id="register-form" class="col-md-12">
                            <form name="reg_form" method="post" novalidate class="angular-form">
                                <div class="form-group" vv-has-error-form>
                                    <label for="register_form_username" class="required">Имя</label>

                                    <input type="text" required placeholder="Имя" maxlength="16" autocomplete="off"
                                           class="form-control" ng-model="user.name" minlength="3" maxlength="16"
                                           ng-model-options="{ debounce: { default: 500, blur: 0 } }" name="uName">

                                    <div ng-show="reg_form.$submitted || reg_form.uName.$touched">
                                        <div ng-show="reg_form.uName.$error.required" class="text-danger">
                                            Обязательное поле
                                        </div>

                                        <div ng-show="reg_form.uName.$error.minlength" class="text-danger">
                                            Минимум 3 символа
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group" vv-has-error-form>
                                    <label for="register_form_email" class="required">Электронная почта</label>
                                    <input type="text" id="register_form_email" name="register_form[email]"
                                           required="required" placeholder="Электронная почта" maxlength="32"
                                           ng-change="checkUserExistence()" class="form-control " ng-model="user.email"
                                           ng-model-options="{ updateOn: blur }">
                                </div>

                                <div class="form-group">
                                    <label for="register_form_password" class="required">Пароль</label>
                                    <input type="password" id="register_form_password" name="register_form[password]"
                                           required="required" placeholder="Пароль" maxlength="16" autocomplete="off"
                                           class="form-control" ng-model="user.password">
                                </div>

                                <div class="form-group">
                                    <input type="password" id="register_form_confirm_password"
                                           name="register_form[confirm_password]" required="required"
                                           placeholder="Подтверждение пароля" maxlength="16" autocomplete="off"
                                           class="form-control" ng-model="user.confirm_password">
                                </div>
                                {[{ user | json }]}
                                <button type="submit" id="register_form_submit" name="register_form[submit]"
                                        class="hidden">Регистрация
                                </button>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                    <button type="button" class="btn btn-primary" id="submit_replica">Отправить</button>
                </div>
            </div>
        </div>
    </div> <!-- modal end-->

    <div class="row">
        <div class="col-md-6 col-md-offset-3 col-xs-8 col-xs-offset-2">
            <div class="text-center">
                <h3>РЕГИСТРАЦИЯ</h3>
            </div>

            <div class="island island-default">
                <a href="{{ vk_auth_link }}" class="btn btn-primary form-control">Регистрация через Вконтакте</a>

                <hr>

                <a class="btn btn-default form-control" type="button" id="show-register-form" data-toggle="modal"
                   data-target="#myModal">
                    Регистрация через @-mail
                </a>

                <hr>

                <div class="text-center">
                    <label>
                        Уже зарегистрированы?

                        <a class="" href="{{ url('login') }}">
                            Войти
                        </a>
                    </label>
                </div>
            </div>
        </div>
    </div>

    <script>
        function fooDirective($interval) {
            return {
                restrict: 'E',
                link: function (scope, element, attrs) {
                    console.log('fooDirective');
//                    console.log(scope[attrs.form].$error);

                    $interval(function () {
                        console.log(scope[attrs.form].$error)
                    }, 500)
                }
            };
        }

        function hasErrorDirective($interval) {
            return {
                restrict: 'A',
                link: function (scope, element, attrs) {
                    var formName = element.parent().attr('name');
                    var fieldName = element.find('input').attr('name');

                    $interval(function () {
                        if (countObject(scope[formName][fieldName].$error) && (scope[formName].$submitted || scope[formName][fieldName].$touched)) {
                            element.addClass('has-error')
                        } else {
                            element.removeClass('has-error')
                        }
                    }, 250)
                }
            };
        }

        function registerController($scope, $http) {
            $scope.user = {};

            $scope.checkUserExistence = function () {
                $http.get('/api/userExists?email=' + $scope.user.email)
            };

            $scope.countObject = countObject;
        }

        var module = angular.module('myApp', []);

        module.controller('registerController', registerController);
        module.directive('fooDirective', fooDirective);
        module.directive('vvHasErrorForm', hasErrorDirective);

        module.config(function ($interpolateProvider) {
            $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
        });
    </script>
{% endblock %}
